5: stop(gettextf("unable to find an inherited method for function %s for signature %s", 
       sQuote(fdef@generic), sQuote(cnames)), domain = NA)
4: (function (classes, fdef, mtable) 
   {
       methods <- .findInheritedMethods(classes, fdef, mtable)
       if (length(methods) == 1L) 
           return(methods[[1L]])
       else if (length(methods) == 0L) {
           cnames <- paste0("\"", vapply(classes, as.character, 
               ""), "\"", collapse = ", ")
           stop(gettextf("unable to find an inherited method for function %s for signature %s", 
               sQuote(fdef@generic), sQuote(cnames)), domain = NA)
       }
       else stop("Internal error in finding inherited methods; didn't return a unique method", 
           domain = NA)
   })(list("list", "data.frame"), new("nonstandardGenericFunction", 
       .Data = function (sp, env, ...) 
       {
           standardGeneric("BIOMOD.formated.data")
       }, generic = structure("BIOMOD.formated.data", package = "biomod2"), 
       package = "biomod2", group = list(), valueClass = character(0), 
       signature = c("sp", "env"), default = NULL, skeleton = (function (sp, 
    ...
3: BIOMOD.formated.data(sp = pa.data.tmp$sp, env = pa.data.tmp$env, 
       xy = as.data.frame(pa.data.tmp$xy), sp.name = sp.name, eval.sp = eval.sp, 
       eval.env = eval.env, eval.xy = eval.xy, na.rm = na.rm)
2: BIOMOD.formated.data.PA(sp = resp.var, xy = resp.xy, env = expl.var, 
       sp.name = resp.name, eval.sp = eval.resp.var, eval.env = eval.expl.var, 
       eval.xy = eval.resp.xy, PA.NbRep = PA.nb.rep, PA.strategy = PA.strategy, 
       PA.nb.absences = PA.nb.absences, PA.dist.min = PA.dist.min, 
       PA.dist.max = PA.dist.max, PA.sre.quant = PA.sre.quant, PA.table = PA.table, 
       na.rm = na.rm)
1: BIOMOD_FormatingData(resp.name = sp_nm, resp.var = myResp, expl.var = myExpl, 
       resp.xy = myRespXY, PA.nb.rep = PA.nb.rep, PA.nb.absences = n_PA_pts, 
       PA.strategy = PA.strategy, PA.dist.min = PA.dist.min)
